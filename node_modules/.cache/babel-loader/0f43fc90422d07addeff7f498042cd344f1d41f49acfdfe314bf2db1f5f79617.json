{"ast":null,"code":"import React from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, onSnapshot, addDoc, deleteDoc, doc, getDoc, query, where, updateDoc } from 'firebase/firestore';\nimport { getAuth, createUserWithEmailAndPassword, signOut, signInWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCMCGcBHZ8z9nw9vZYKyJUySy-dBsFaGiY\",\n  authDomain: \"newfireproject-ecc03.firebaseapp.com\",\n  projectId: \"newfireproject-ecc03\",\n  storageBucket: \"newfireproject-ecc03.appspot.com\",\n  messagingSenderId: \"994706352537\",\n  appId: \"1:994706352537:web:ec16c749841e90b4b74b08\"\n};\n\n//initializing the database\ninitializeApp(firebaseConfig);\nconst db = getFirestore();\nconst auth = getAuth();\n\n//collection reference\nconst colRef = collection(db, 'users');\n\n// queries\nconst q = query(colRef, where(\"title\", \"==\", \"staff\"));\n\n//real time data collection \nonSnapshot(colRef, snapshot => {\n  let users = [];\n  snapshot.docs.forEach(doc => {\n    users.push({\n      ...doc.data(),\n      id: doc.id\n    });\n  });\n  console.log(users);\n})\n\n//errors\n.catch(err => {\n  console.log(err.message);\n});\n\n// adding docs\nconst addUserForm = document.querySelector('.add');\naddUserForm.addEventListener('submit', e => {\n  e.preventDefault();\n  addDoc(colRef, {\n    title: addUserForm.title.value,\n    name: addUserForm.name.value\n  }).then(() => {\n    //empties the form\n    addUserForm.reset();\n  });\n});\n\n// deleting documents\nconst deleteUserForm = document.querySelector('.delete');\ndeleteUserForm.addEventListener('submit', e => {\n  e.preventDefault();\n  const docRef = doc(db, 'users', deleteUserForm.id.value);\n  deleteDoc(docRef).then(() => {\n    deleteUserForm.reset();\n  });\n});\n\n//obtaining single documents\n//const docRef = doc(db, 'users', )\n\n// updating a document\nconst updateForm = document.querySelector('.update');\nupdateForm.addEventListener('submit', e => {\n  e.preventDefault();\n  let docRef = doc(db, 'users', updateForm.id.value);\n  updateDoc(docRef, {\n    title: 'updated title'\n  }).then(() => {\n    updateForm.reset();\n  });\n});\n\n// notifications for login/logout changes\n// we can use this to alert the manager of anychanges\nonAuthStateChanged(auth, user => {\n  console.log('user status changed:', user);\n});\n\n// signing users up\nconst signupForm = document.querySelector('.signup');\nsignupForm.addEventListener('submit', e => {\n  e.preventDefault();\n  const email = signupForm.email.value;\n  const password = signupForm.password.value;\n  createUserWithEmailAndPassword(auth, email, password).then(cred => {\n    console.log('user created:', cred.user);\n    signupForm.reset();\n  }).catch(err => {\n    console.log(err.message);\n  });\n});","map":{"version":3,"names":["React","initializeApp","getFirestore","collection","onSnapshot","addDoc","deleteDoc","doc","getDoc","query","where","updateDoc","getAuth","createUserWithEmailAndPassword","signOut","signInWithEmailAndPassword","onAuthStateChanged","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","auth","colRef","q","snapshot","users","docs","forEach","push","data","id","console","log","catch","err","message","addUserForm","document","querySelector","addEventListener","e","preventDefault","title","value","name","then","reset","deleteUserForm","docRef","updateForm","user","signupForm","email","password","cred"],"sources":["/Users/vedanttalekar/Desktop/firebasics/src/index.js"],"sourcesContent":["import React from 'react';\n\n\n\n\n\nimport {initializeApp} from 'firebase/app'\nimport {\n  getFirestore, collection, onSnapshot,\n  addDoc, deleteDoc, doc, getDoc, query,\n  where, updateDoc, \n} from 'firebase/firestore'\n\nimport { \n  getAuth,\n  createUserWithEmailAndPassword,\n  signOut, signInWithEmailAndPassword,\n  onAuthStateChanged\n\n} from 'firebase/auth'\n\n\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCMCGcBHZ8z9nw9vZYKyJUySy-dBsFaGiY\",\n  authDomain: \"newfireproject-ecc03.firebaseapp.com\",\n  projectId: \"newfireproject-ecc03\",\n  storageBucket: \"newfireproject-ecc03.appspot.com\",\n  messagingSenderId: \"994706352537\",\n  appId: \"1:994706352537:web:ec16c749841e90b4b74b08\"\n};\n\n//initializing the database\ninitializeApp(firebaseConfig)\nconst db = getFirestore()\nconst auth = getAuth()\n\n//collection reference\nconst colRef = collection(db, 'users')\n\n// queries\n const q = query(colRef, where(\"title\", \"==\", \"staff\"))\n\n\n//real time data collection \n  onSnapshot(colRef, (snapshot) => {\n    let users = []\n    snapshot.docs.forEach((doc) => {\n      users.push({ ...doc.data(), id: doc.id })\n    })\n    console.log(users)\n  }) \n\n  //errors\n  .catch (err =>{\n    console.log(err.message)\n  })\n\n  // adding docs\nconst addUserForm = document.querySelector('.add')\naddUserForm.addEventListener('submit', (e) => {\n  e.preventDefault()\n\n  addDoc(colRef, {\n    title: addUserForm.title.value,\n    name: addUserForm.name.value,\n  })\n  .then(() => {\n    //empties the form\n    addUserForm.reset()\n  })\n})\n\n// deleting documents\nconst deleteUserForm = document.querySelector('.delete')\ndeleteUserForm.addEventListener('submit', (e) => {\n  e.preventDefault()\n\n  const docRef = doc(db, 'users', deleteUserForm.id.value)\n\n  deleteDoc(docRef)\n    .then(() => {\n      deleteUserForm.reset()\n    })\n})\n\n//obtaining single documents\n//const docRef = doc(db, 'users', )\n\n// updating a document\nconst updateForm = document.querySelector('.update')\nupdateForm.addEventListener('submit', (e) => {\n  e.preventDefault()\n\n  let docRef = doc(db, 'users', updateForm.id.value)\n\n  updateDoc(docRef, {\n    title: 'updated title'\n  })\n  .then(() => {\n    updateForm.reset()\n  })\n})\n\n// notifications for login/logout changes\n// we can use this to alert the manager of anychanges\nonAuthStateChanged(auth, (user) => {\n  console.log('user status changed:', user)\n}) \n\n// signing users up\nconst signupForm = document.querySelector('.signup')\nsignupForm.addEventListener('submit', (e) => {\n  e.preventDefault()\n\n  const email = signupForm.email.value\n  const password = signupForm.password.value\n\n  createUserWithEmailAndPassword(auth, email, password)\n    .then(cred => {\n      console.log('user created:', cred.user)\n      signupForm.reset()\n    })\n\n    \n    .catch(err => {\n      console.log(err.message)\n    })\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
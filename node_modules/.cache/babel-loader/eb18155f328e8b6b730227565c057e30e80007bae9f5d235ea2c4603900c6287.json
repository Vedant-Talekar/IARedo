{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, onSnapshot, addDoc, deleteDoc, doc, getDoc, query, where } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCMCGcBHZ8z9nw9vZYKyJUySy-dBsFaGiY\",\n  authDomain: \"newfireproject-ecc03.firebaseapp.com\",\n  projectId: \"newfireproject-ecc03\",\n  storageBucket: \"newfireproject-ecc03.appspot.com\",\n  messagingSenderId: \"994706352537\",\n  appId: \"1:994706352537:web:ec16c749841e90b4b74b08\"\n};\ninitializeApp(firebaseConfig);\nconst db = getFirestore();\n\n//collection reference\nconst colRef = collection(db, 'users');\n\n// queries\nconst q = query(colRef, where(\"title\", \"==\", \"staff\"));\n\n//real time data collection \nonSnapshot(q, snapshot => {\n  let users = [];\n  snapshot.docs.forEach(doc => {\n    users.push({\n      ...doc.data(),\n      id: doc.id\n    });\n  });\n  console.log(users);\n})\n\n//errors\n.catch(err => {\n  console.log(err.message);\n});\n\n// adding docs\nconst addUserForm = document.querySelector('.add');\naddUserForm.addEventListener('submit', e => {\n  e.preventDefault();\n  addDoc(colRef, {\n    title: addUserForm.title.value,\n    name: addUserForm.name.value\n  }).then(() => {\n    //empties the form\n    addUserForm.reset();\n  });\n});\n\n// deleting docs\nconst deleteUserForm = document.querySelector('.delete');\ndeleteUserForm.addEventListener('submit', e => {\n  e.preventDefault();\n  const docRef = doc(db, 'users', deleteUserForm.id.value);\n  deleteDoc(docRef).then(() => {\n    deleteUserForm.reset();\n  });\n});\n\n//obtaining single documents\nconst docRef = doc(db, 'users');","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","initializeApp","getFirestore","collection","onSnapshot","addDoc","deleteDoc","doc","getDoc","query","where","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","colRef","q","snapshot","users","docs","forEach","push","data","id","console","log","catch","err","message","addUserForm","document","querySelector","addEventListener","e","preventDefault","title","value","name","then","reset","deleteUserForm","docRef"],"sources":["/Users/vedanttalekar/Desktop/firebasics/my-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {initializeApp} from 'firebase/app'\nimport {\n  getFirestore, collection, onSnapshot,\n  addDoc, deleteDoc, doc, getDoc, query,\n  where\n} from 'firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCMCGcBHZ8z9nw9vZYKyJUySy-dBsFaGiY\",\n  authDomain: \"newfireproject-ecc03.firebaseapp.com\",\n  projectId: \"newfireproject-ecc03\",\n  storageBucket: \"newfireproject-ecc03.appspot.com\",\n  messagingSenderId: \"994706352537\",\n  appId: \"1:994706352537:web:ec16c749841e90b4b74b08\"\n};\n\ninitializeApp(firebaseConfig)\n\nconst db = getFirestore()\n\n//collection reference\nconst colRef = collection(db, 'users')\n\n// queries\n const q = query(colRef, where(\"title\", \"==\", \"staff\"))\n\n\n//real time data collection \n  onSnapshot(q, (snapshot) => {\n    let users = []\n    snapshot.docs.forEach((doc) => {\n      users.push({ ...doc.data(), id: doc.id })\n    })\n    console.log(users)\n  }) \n\n  //errors\n  .catch (err =>{\n    console.log(err.message)\n  })\n\n  // adding docs\nconst addUserForm = document.querySelector('.add')\naddUserForm.addEventListener('submit', (e) => {\n  e.preventDefault()\n\n  addDoc(colRef, {\n    title: addUserForm.title.value,\n    name: addUserForm.name.value,\n  })\n  .then(() => {\n    //empties the form\n    addUserForm.reset()\n  })\n})\n\n// deleting docs\nconst deleteUserForm = document.querySelector('.delete')\ndeleteUserForm.addEventListener('submit', (e) => {\n  e.preventDefault()\n\n  const docRef = doc(db, 'users', deleteUserForm.id.value)\n\n  deleteDoc(docRef)\n    .then(() => {\n      deleteUserForm.reset()\n    })\n})\n\n//obtaining single documents\nconst docRef = doc(db, 'users', )"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAAQC,aAAa,QAAO,cAAc;AAC1C,SACEC,YAAY,EAAEC,UAAU,EAAEC,UAAU,EACpCC,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EACrCC,KAAK,QACA,oBAAoB;AAE3B,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,sCAAsC;EAClDC,SAAS,EAAE,sBAAsB;EACjCC,aAAa,EAAE,kCAAkC;EACjDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAEDhB,aAAa,CAACU,cAAc,CAAC;AAE7B,MAAMO,EAAE,GAAGhB,YAAY,EAAE;;AAEzB;AACA,MAAMiB,MAAM,GAAGhB,UAAU,CAACe,EAAE,EAAE,OAAO,CAAC;;AAEtC;AACC,MAAME,CAAC,GAAGX,KAAK,CAACU,MAAM,EAAET,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;;AAGvD;AACEN,UAAU,CAACgB,CAAC,EAAGC,QAAQ,IAAK;EAC1B,IAAIC,KAAK,GAAG,EAAE;EACdD,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAEjB,GAAG,IAAK;IAC7Be,KAAK,CAACG,IAAI,CAAC;MAAE,GAAGlB,GAAG,CAACmB,IAAI,EAAE;MAAEC,EAAE,EAAEpB,GAAG,CAACoB;IAAG,CAAC,CAAC;EAC3C,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;AACpB,CAAC;;AAED;AAAA,CACCQ,KAAK,CAAEC,GAAG,IAAG;EACZH,OAAO,CAACC,GAAG,CAACE,GAAG,CAACC,OAAO,CAAC;AAC1B,CAAC,CAAC;;AAEF;AACF,MAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;AAClDF,WAAW,CAACG,gBAAgB,CAAC,QAAQ,EAAGC,CAAC,IAAK;EAC5CA,CAAC,CAACC,cAAc,EAAE;EAElBjC,MAAM,CAACc,MAAM,EAAE;IACboB,KAAK,EAAEN,WAAW,CAACM,KAAK,CAACC,KAAK;IAC9BC,IAAI,EAAER,WAAW,CAACQ,IAAI,CAACD;EACzB,CAAC,CAAC,CACDE,IAAI,CAAC,MAAM;IACV;IACAT,WAAW,CAACU,KAAK,EAAE;EACrB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMC,cAAc,GAAGV,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;AACxDS,cAAc,CAACR,gBAAgB,CAAC,QAAQ,EAAGC,CAAC,IAAK;EAC/CA,CAAC,CAACC,cAAc,EAAE;EAElB,MAAMO,MAAM,GAAGtC,GAAG,CAACW,EAAE,EAAE,OAAO,EAAE0B,cAAc,CAACjB,EAAE,CAACa,KAAK,CAAC;EAExDlC,SAAS,CAACuC,MAAM,CAAC,CACdH,IAAI,CAAC,MAAM;IACVE,cAAc,CAACD,KAAK,EAAE;EACxB,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;AACA,MAAME,MAAM,GAAGtC,GAAG,CAACW,EAAE,EAAE,OAAO,CAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}